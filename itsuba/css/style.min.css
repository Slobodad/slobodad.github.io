/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}*,legend,td,th{padding:0}*,body{margin:0}.header,sub,sup{position:relative}.component__list,.header__col-second,.header__form{-webkit-box-orient:vertical;-webkit-box-direction:normal}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}.about__container,.header__container{background-repeat:no-repeat;background-position:center}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{max-width:100%}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:'Open Sans',sans-serif;font-weight:800;background-color:#efefef}:hover{-webkit-transition:.1s ease-in;-o-transition:.1s ease-in;transition:.1s ease-in}ul{list-style:none}.header{padding-bottom:60px}.header::before,.header__container::before{content:'';width:2px;height:100%;position:absolute;top:0;background-color:#efefef}.header::before{display:block;left:20.4%}@media only screen and (max-width:768px){.header{margin-bottom:30px;padding-bottom:0;background-image:url(../img/header-bcgr-tablet.jpg);background-position:center;background-size:cover}.header::before{display:none}}.header__container{padding:85px 65px 60px 115px;background-image:url(../img/header_background.jpg);background-size:cover}@media only screen and (max-width:768px) and (max-width:415px){.header__container{padding:35px}}.header__container::before{display:block;right:34.1%}@media only screen and (max-width:768px){.header__container{margin:0;padding-right:35px;background-image:none}.header__container::before{display:none}.header__col-first{position:absolute;top:254px;left:80px}}.header__title{margin-bottom:110px;max-width:210px;font-size:44px;line-height:.75;text-transform:uppercase;color:#989898}@media only screen and (max-width:768px){.header__title{font-size:46px;line-height:1}}@media only screen and (max-width:415px){.header__col-first{top:200px;left:10px}.header__title{font-size:36px;margin-bottom:50px}}.header__rectangle{margin-bottom:150px;margin-left:-18px;width:50px;height:7px;display:block;-ms-flex-item-align:center;align-self:center;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);background-color:#1d1d1d}.header__description::after,.header__logo::before{background-color:#ef4444;content:''}@media only screen and (max-width:768px){.header__rectangle{display:none}}.header__description{position:relative;font-size:12px;line-height:1.15;color:#3a3a3a}.header__description span{display:block}.header__description::after{width:11px;height:3px;position:absolute;bottom:-20px;left:0}@media only screen and (max-width:768px){.header__description span{display:inline}.header__description::after{width:50px;height:10px;bottom:-70px}.header__description{font-size:30px}}@media only screen and (max-width:415px){.header__description{font-size:25px}}.header__col-second{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__logo{margin-bottom:80px;position:relative;font-size:44px;text-transform:uppercase;color:#1d1d1d}.header__logo::before{width:13px;height:13px;display:block;position:absolute;top:-30px;left:1%}@media only screen and (max-width:768px){.header__logo::before{width:18px;height:18px;top:-25px}.header__logo{margin-right:250px;margin-bottom:600px;font-size:72px;color:#000}}@media only screen and (max-width:415px){.header__logo::before{width:13px;height:13px;top:-15px}.header__logo{margin-right:200px;margin-bottom:450px;font-size:44px}}.header__form{margin-bottom:75px;-ms-flex-item-align:end;align-self:flex-end;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.header__field{margin-bottom:15px;padding:5px 0;max-width:240px;border:2px solid #e5e5e5}.header__field::-webkit-input-placeholder{font-size:12px;font-weight:700;text-align:center;text-transform:uppercase;color:#646464}.header__field:-ms-input-placeholder{font-size:12px;font-weight:700;text-align:center;text-transform:uppercase;color:#646464}.header__field::-ms-input-placeholder{font-size:12px;font-weight:700;text-align:center;text-transform:uppercase;color:#646464}.header__field::placeholder{font-size:12px;font-weight:700;text-align:center;text-transform:uppercase;color:#646464}@media only screen and (max-width:768px){.header__field{min-width:430px;padding:30px 0}.header__field::-webkit-input-placeholder{max-width:430px;font-size:24px;text-transform:lowercase}.header__field:-ms-input-placeholder{max-width:430px;font-size:24px;text-transform:lowercase}.header__field::-ms-input-placeholder{max-width:430px;font-size:24px;text-transform:lowercase}.header__field::placeholder{max-width:430px;font-size:24px;text-transform:lowercase}}.about__subtitle,.about__title,.component__description,.component__icon p:last-child,.header__btn,.header__subtitle,.tracking__subtitle{text-transform:uppercase}@media only screen and (max-width:415px){.header__field{min-width:120%;padding:20px 0}.header__field::-webkit-input-placeholder{min-width:100%;padding:20px 0}.header__field:-ms-input-placeholder{min-width:100%;padding:20px 0}.header__field::-ms-input-placeholder{min-width:100%;padding:20px 0}.header__field::placeholder{min-width:100%;padding:20px 0}}.header__btn{margin-top:15px;margin-right:25px;padding:10px 0;width:180px;font-size:12px;font-weight:700;border:none;color:rgba(100,100,100,.5);background-color:#fff;-webkit-box-shadow:0 9px 21px 0 rgba(0,0,0,.26);box-shadow:0 9px 21px 0 rgba(0,0,0,.26)}@media only screen and (max-width:768px){.header__btn{margin-right:70px;padding:25px 0;width:280px;font-size:22px}.header__subtitle{display:none}}@media only screen and (max-width:415px){.header__btn{margin-right:0;padding:15px 0;min-width:120%}}.header__subtitle{padding-top:20px;padding-left:28px;max-width:210px;font-size:44px;line-height:.75;color:#989898}.about{padding-bottom:60px}@media only screen and (max-width:768px){.about{margin-bottom:30px;padding-bottom:0;background-color:#fff}}.about__container{padding:85px 85px 75px 115px;background-image:url(../img/about_background.jpg);background-size:cover}@media only screen and (max-width:768px){.about__container{margin:0;padding:85px 35px 75px 95px;background-image:none}}@media only screen and (max-width:415px){.about__container{padding:65px}}.about__title{margin-bottom:0;position:relative;font-size:32px;line-height:.7;color:#1d1d1d}.about__title::before{content:'';width:10px;height:10px;display:block;position:absolute;top:-25px;left:0;background-color:#ef4444}.about__subtitle{margin-bottom:60px;font-size:22px;color:#bfbdbd}.about__img{padding-left:55px}.about__img img{max-width:260px}@media only screen and (max-width:415px){.about__img{display:none}}.component__box,.component__list{display:-webkit-box;display:-ms-flexbox}.component__first-element{margin-bottom:20px}@media only screen and (max-width:768px){.about__title{line-height:1}.about__img{padding-top:60px}.component__first-element{margin-bottom:0}}.component__box{margin-bottom:60px;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media only screen and (max-width:768px){.component__box{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}@media only screen and (max-width:415px){.component__box{margin-bottom:20px}}.component__list{max-width:210px;display:flex;-ms-flex-direction:column;flex-direction:column}@media only screen and (max-width:768px){.component__list{max-width:100%}}.component__element{margin-bottom:15px;display:-webkit-box;display:-ms-flexbox;display:flex}.component__icon{max-width:100%;margin-right:45px}.component__icon p:first-child{font-size:25.6px;line-height:.75;text-transform:uppercase;color:rgba(29,29,29,.5)}.component__icon p:last-child{width:45px;font-size:11.2px;line-height:0;color:#636363}.component__description{max-width:110px;-ms-flex-item-align:center;align-self:center;font-size:14px;line-height:1;color:#636363}.component__description p{margin:0 auto}.component__text{font-size:12px;line-height:1.3;color:#3a3a3a}.tracking{padding-bottom:60px}@media only screen and (max-width:768px){.tracking{margin-bottom:30px;padding-bottom:0;background-color:#fff}}.tracking__container{padding:45px 115px 40px;background-color:#fff;background-size:cover}@media only screen and (max-width:768px){.tracking__container{margin:0;padding:65px 85px 40px}}@media only screen and (max-width:415px){.component__text{font-size:18px;font-weight:700}.tracking__container{padding:55px 45px}}.tracking__box{padding-top:50px}.tracking__subtitle{font-size:22px;line-height:.25;color:#bfbdbd}.tracking__element,.tracking__title{color:#636363;text-transform:uppercase}@media only screen and (max-width:768px){.tracking__box{padding-top:0}.tracking__img{padding-top:80px;-ms-flex-item-align:center;align-self:center;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.tracking__subtitle{line-height:1}}@media only screen and (max-width:415px){.tracking__img{padding-top:0}.tracking__subtitle{text-align:center}}.tracking__title{margin-bottom:75px;max-width:165px;font-size:32px;line-height:.75}@media only screen and (max-width:768px){.tracking__title{margin-right:25px;margin-bottom:30px;max-width:100%;text-align:right;line-height:1}}.tracking__list-first{padding-right:50px}.tracking__list-second{padding-top:220px}.tracking__list-second div{padding-bottom:20px}.tracking__list-second p{text-align:left}.tracking__element{margin-bottom:60px;font-size:26px;text-align:right;line-height:.9}@media only screen and (max-width:415px){.tracking__list-first{padding-right:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-wrap:wrap;flex-wrap:wrap}.tracking__element{line-height:1.3}}.tracking__element span:last-child{display:block;font-size:14px;font-weight:700;text-transform:uppercase;color:#dc8d8d}.average span:first-child,.average span:nth-child(2),.large,.small{color:#bfbdbd}.tracking__element-tabletOn{display:none}.small{font-size:16px;font-weight:700;text-transform:uppercase}.average{font-size:18px}.large{font-size:26px;font-weight:700;text-transform:uppercase}.instruction{padding-bottom:60px}@media only screen and (max-width:768px){.tracking__element{margin-bottom:40px}.tracking__element-tabletOn{display:block}.tabletOff{display:none}.instruction{margin-bottom:30px;padding-bottom:0;background-color:#fff}}.instruction__container{padding:65px 115px 85px;background-color:#fff;background-size:cover}@media only screen and (max-width:768px){.instruction__container{margin:0;padding:65px 65px 45px 85px}}.instruction__subtitle{font-size:22px;line-height:.25;text-transform:uppercase;color:#bfbdbd}@media only screen and (max-width:415px){.instruction__container{padding:55px 45px}.instruction__subtitle{text-align:center;line-height:1}}.instruction__title{margin-bottom:100px;font-size:32px;line-height:.75;text-transform:uppercase;color:#636363}@media only screen and (max-width:768px){.instruction__title{margin-bottom:50px}}@media only screen and (max-width:415px){.instruction__title{font-size:24px;text-align:center;line-height:1}}.instruction__element{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:20px}.instruction__element:last-child{min-width:490px}.instruction__element span{margin-right:35px;padding-left:5px;max-width:31px;max-height:40px;font-size:18px;font-weight:700;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);color:rgba(99,99,99,.2)}.instruction__element p{position:relative;font-size:16px;font-weight:700;line-height:1;text-align:left;text-transform:uppercase;color:#646464}.works__item,.works__title{font-weight:700;text-align:right;text-transform:uppercase}.instruction__element p::before{content:"";width:5px;height:5px;display:block;position:absolute;top:2px;left:-10px;background-color:#ef4444}.instruction__slider{padding-top:55px}@media only screen and (max-width:415px){.instruction__slider{padding-left:80px}}.works{padding-bottom:60px}@media only screen and (max-width:768px){.instruction__element{margin-bottom:10px}.instruction__element:last-child{min-width:100%}.instruction__slider{padding-top:0}.works{margin-bottom:30px;padding-bottom:0;background-color:#fff}}.works__container{padding:125px 115px 115px;background-color:#fff;background-size:cover}.works__box{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media only screen and (max-width:768px){.works__container{margin:0;padding:85px}.works__box{margin-bottom:20px}}@media only screen and (max-width:415px){.works__container{padding:55px 25px}.works__box{margin-bottom:40px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.works__title{margin-right:35px;margin-bottom:40px;padding-top:35px;font-size:24px;line-height:1;color:rgba(99,99,99,.7)}.works__title span{display:block}@media only screen and (max-width:415px){.works__title span{display:inline}.works__title{margin-right:0;margin-bottom:20px;padding-top:0}}.works__list{margin-right:35px;max-width:190px}.works__item{margin-bottom:20px;font-size:14px;line-height:1.3;color:#646464}@media only screen and (max-width:415px){.works__list{max-width:100%}.works__img{padding-right:120px}}.works__img img{-webkit-box-shadow:0 17px 35px 0 rgba(0,0,0,.84);box-shadow:0 17px 35px 0 rgba(0,0,0,.84)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
