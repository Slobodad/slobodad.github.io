/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}*,body{margin:0}*,legend,td,th{padding:0}.contact__form,.nav__list,.services__item,ul{list-style:none}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{max-width:100%}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}.btn,.nav__link{text-transform:uppercase}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}h2{font-family:Raleway,sans-serif;font-size:90px;font-weight:700;line-height:1;color:#fff}.btn,p{font-family:Raleway,sans-serif;font-weight:300}p{font-size:17px;line-height:1.58;color:#2a2a2a}:hover{-webkit-transition:.1s ease-in;-o-transition:.1s ease-in;transition:.1s ease-in}.btn{width:200px;padding:13px 25px;font-size:20px;border:none;background:0 0;-webkit-box-shadow:0 2px 5px 0 rgba(0,0,0,.5);box-shadow:0 2px 5px 0 rgba(0,0,0,.5);cursor:pointer;color:#fff}.btn:hover{background-color:#fff;color:#000}.header-background{background-image:url(../img/background-header.jpg);background-repeat:no-repeat;background-position:center;background-size:cover}.header{padding:50px 0 40px}.header__logo{font-family:Pacifico,cursive;font-size:50px;font-weight:400;color:#2a2a2a}.nav__link,.services__text,.subscribe__form input{font-family:Raleway,sans-serif}.nav__list{padding-top:20px;margin-top:20px;margin-bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media only screen and (max-width:415px){.header__logo{text-align:center}.nav__list{width:100%;height:100%;display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.nav__list--is-active{display:-webkit-box;display:-ms-flexbox;display:flex}}.nav__link{font-size:16px;font-weight:700;line-height:1.5;color:#2a2a2a}.nav__link:hover{border-top:3px solid #e06039;padding-top:9px;text-decoration:none;color:#2a2a2a}.nav__btn{display:none}@media only screen and (max-width:415px){.nav__btn{display:block;width:100%;font-family:Raleway,sans-serif;font-size:16px;font-weight:700;line-height:1.5;text-transform:uppercase;border:1px solid #2a2a2a;background-color:transparent;color:#2a2a2a}}.nav__btn--is-active{display:none}.hero{padding:215px 0 70px}@media only screen and (max-width:768px){.hero{padding:150px 0 100px}}@media only screen and (max-width:415px){.hero{padding:30px 0}.hero__btn{width:100%}}.hero__title h2{padding-bottom:35px;font-size:60px;font-weight:900;color:#2a2a2a;text-transform:in}.hero__description{padding-bottom:30px}.hero__btn{margin-bottom:290px;background-color:#e06039}.scroll{content:url(../img/scroll.png)}.scroll:hover{opacity:.7}.about-background{background-color:#00b1b1}.about{padding:70px 0 65px}@media only screen and (max-width:768px){.hero__btn{margin-bottom:100px}.about{padding:100px 0}.about__img{display:none}}@media only screen and (max-width:415px){.about{padding:30px 0}}.about__title{padding:0 0 10px 85px}@media only screen and (max-width:415px){.about__title{padding:0 5px 10px;font-size:40px;text-align:center}}.about__description{padding:0 0 15px 85px;text-align:left;color:#fff}@media only screen and (max-width:415px){.about__description{padding:0 5px 10px}}.services-background{background-color:#70bfff}.services{padding:180px 0 150px}@media only screen and (max-width:768px){.services{padding:70px 0 100px}.services__container{position:relative;z-index:10;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}}@media only screen and (max-width:415px){.services{padding:30px 0}.services__container{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}}.services__list{padding-left:30px}.services__item{width:400px;margin-bottom:20px;background-color:#fff}@media only screen and (max-width:415px){.services__list{padding:0 5px;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.services__item{width:100%;margin-bottom:10px}}.services__link{position:relative;min-height:100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;text-decoration:none}.services__link:hover{text-decoration:none;background:#ccc}.contact-bacground,.subscribe-background{background-repeat:no-repeat;background-position:center;background-size:cover}.services__text{width:300px;margin:auto;font-size:20px;font-weight:900;text-align:center;line-height:1.3;color:#262626}.services__icon{padding-left:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-preferred-size:100px;flex-basis:100px;border-left:1px solid #262626}.services__img{position:absolute;top:-15%;left:0}@media only screen and (max-width:768px){.services__img{z-index:0;top:100%;left:40%}}.services__title{position:absolute;top:30%;left:0}@media only screen and (max-width:415px){.services__link{min-height:70px}.services__text{font-size:16px}.services__icon{padding:10px}.services__img{display:none}.services__title{position:unset;margin-bottom:30px;padding:0 5px;text-align:center}.services__title h2{font-size:40px}}@media only screen and (max-width:768px){.services__title{position:unset;margin-bottom:70px;padding:0 5px;text-align:center}}.gallery-background{background-color:#ffe92f}.gallery-background img{margin-bottom:30px;-webkit-box-shadow:0 4px 10px 0 rgba(0,0,0,.5);box-shadow:0 4px 10px 0 rgba(0,0,0,.5)}.gallery{padding:100px 0 120px}@media only screen and (max-width:768px){.gallery{padding:100px 0}.gallery__title{text-align:center}}@media only screen and (max-width:415px){.gallery{padding:30px 0}}.gallery__title{padding-bottom:25px;color:#262626}@media only screen and (max-width:415px){.gallery__title{padding:0 5px;font-size:40px;text-align:center}}.gallery__description{max-width:600px;padding-bottom:50px;text-align:center}@media only screen and (max-width:768px){.gallery__description{max-width:100%;text-align:center}}.gallery__btn{background-color:#5585a2}@media only screen and (max-width:415px){.gallery__description{padding:0 5px;text-align:left}.gallery__btn{width:100%}}.subscribe-background{background-image:url(../img/background-subscribe.jpg)}.subscribe{padding:145px 0 165px}@media only screen and (max-width:768px){.subscribe{padding:100px 0}}@media only screen and (max-width:415px){.subscribe{padding:30px 0}}.subscribe__title{padding-bottom:35px}@media only screen and (max-width:768px){.subscribe__title{padding-bottom:20px}}.subscribe__title h2{font-size:40px;color:#262626}@media only screen and (max-width:415px){.subscribe__title{padding-bottom:10px}.subscribe__title h2{padding:0 40px;font-size:40px;text-align:center}}.subscribe__description{padding-bottom:35px}@media only screen and (max-width:768px){.subscribe__description{padding-bottom:20px}}@media only screen and (max-width:415px){.subscribe__description{padding-bottom:10px}}.subscribe__form input{width:570px;padding:20px 15px;margin-right:30px;font-size:15px;font-weight:300;opacity:.5}.blog__date span,.blog__text{font-family:Raleway,sans-serif;font-weight:700;color:#fff}@media only screen and (max-width:768px){.subscribe__form input{width:65%;margin-bottom:10px}}@media only screen and (max-width:415px){.subscribe__form input{width:100%;margin-bottom:10px}}.subscribe__btn{margin-bottom:5px;padding:15px 25px;background-color:#96b92c}.blog-bacground{background-color:#b07cf7}.blog-bacground img{-webkit-box-shadow:0 4px 10px 0 rgba(0,0,0,.5);box-shadow:0 4px 10px 0 rgba(0,0,0,.5)}.blog{padding:100px 0 120px}@media only screen and (max-width:768px){.blog{padding:70px 0 100px}.blog__title{text-align:center}}@media only screen and (max-width:415px){.subscribe__btn{width:100%;margin-bottom:10px}.blog{padding:30px 0}}.blog__title{padding-bottom:30px}@media only screen and (max-width:415px){.blog__title{padding:0 5px 10px;font-size:40px}}.blog__description{width:570px;padding-bottom:45px;text-align:center;color:#fff}@media only screen and (max-width:768px){.blog__description{width:100%;padding-bottom:30px;text-align:center}}@media only screen and (max-width:415px){.blog__description{padding:0 5px 10px}}.blog__row{padding-bottom:50px}@media only screen and (max-width:415px){.blog__row{padding-bottom:10px}}.blog__link:hover{opacity:.9}.blog__content{position:absolute;top:30px;left:20px}@media only screen and (max-width:768px){.blog__article{width:100%;padding-bottom:30px;text-align:center}.blog__content{top:0;left:5px}}.blog__date{width:60px;height:60px;border-radius:10%;padding-top:7px;text-align:center;vertical-align:middle;background-color:rgba(38,38,38,.5)}.blog__date span{text-align:center;font-size:32px;line-height:.5}@media only screen and (max-width:768px){.blog__date{width:50px;height:50px;padding-top:0}.blog__date span{font-size:18px}}@media only screen and (max-width:415px){.blog__article{padding-bottom:10px}.blog__content{position:absolute;top:5px;left:10px}.blog__date{width:60px;height:60px;padding-top:7px}.blog__date span{font-size:32px}}.blog__text{width:370px;padding:0 25px;position:relative;top:115px;font-size:20px;line-height:1.1}@media only screen and (max-width:1024px){.blog__text{width:100%;padding:0 15px;top:75px}}@media only screen and (max-width:768px){.blog__text{width:90%;padding:0 5px;top:50px;font-size:16px}}@media only screen and (max-width:415px){.blog__text{width:100%;padding:0 10px;top:100px;text-align:left}}.blog__text span:last-child{position:absolute;top:50px;left:25px;font-size:13px;font-weight:300;line-height:1.9}@media only screen and (max-width:768px){.blog__text span:last-child{font-size:10px}}.date__conteiner{padding-left:10px}.btn__blog{background-color:#f72b3b}.contact-bacground{background-image:url(../img/bacground-footer.jpg)}.contact{padding:100px 0 115px}@media only screen and (max-width:415px){.blog__text span:last-child{font-size:13px}.btn__blog{width:100%}.contact{padding:30px 0}}@media only screen and (max-width:768px){.contact{padding:100px 0}}.contact__title{padding-bottom:45px;color:#262626}@media only screen and (max-width:415px){.contact__title{padding:0 5px 10px;font-size:40px;text-align:center}}@media only screen and (max-width:768px){.contact__title{padding:0 5px 10px;text-align:center}}.contact__description{width:370px;margin:0 auto;padding-bottom:45px;text-align:center}.contact__form input,.contact__form textarea{margin-bottom:15px;font-size:15px;font-family:Raleway,sans-serif;font-weight:300;line-height:1.5}.contact__form input{width:500px;height:50px;padding-left:20px;border:none;background-color:rgba(0,196,196,.5)}@media only screen and (max-width:415px){.contact__description{padding-bottom:10px}.contact__form input{width:100%}}@media only screen and (max-width:768px){.contact__description{padding-bottom:10px}.contact__form input{width:100%}}.contact__form input::-webkit-input-placeholder{color:rgba(255,255,255,.5)}.contact__form input:-ms-input-placeholder{color:rgba(255,255,255,.5)}.contact__form input::-ms-input-placeholder{color:rgba(255,255,255,.5)}.contact__form input::placeholder{color:rgba(255,255,255,.5)}.contact__form input:focus::-webkit-input-placeholder{color:#fff}.contact__form input:focus:-ms-input-placeholder{color:#fff}.contact__form input:focus::-ms-input-placeholder{color:#fff}.contact__form input:focus::placeholder{color:#fff}.contact__form input:focus{border-left:5px solid #355b82;background-color:#00c4c4}.contact__form textarea{width:500px;height:250px;resize:none;padding:20px 20px 0;overflow:auto;border:none;background-color:rgba(0,196,196,.5)}@media only screen and (max-width:768px){.contact__form textarea{width:100%}}.contact__form textarea::-webkit-input-placeholder{color:rgba(255,255,255,.5)}.contact__form textarea:-ms-input-placeholder{color:rgba(255,255,255,.5)}.contact__form textarea::-ms-input-placeholder{color:rgba(255,255,255,.5)}.contact__form textarea::placeholder{color:rgba(255,255,255,.5)}.contact__form textarea:focus::-webkit-input-placeholder{color:#fff}.contact__form textarea:focus:-ms-input-placeholder{color:#fff}.contact__form textarea:focus::-ms-input-placeholder{color:#fff}.contact__form textarea:focus::placeholder{color:#fff}.contact__form textarea:focus{border-left:5px solid #355b82;background-color:#00c4c4}.contact__text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding-left:70px}.contact__text span{padding-bottom:20px}@media only screen and (max-width:415px){.contact__form textarea{width:100%}.contact__text{padding-left:20px}.contact__text span{padding-bottom:10px}.footer__logo{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1;text-align:center}}.footer{padding:30px 0;background-color:#262626}.footer__copywrite--text{font-family:Raleway,sans-serif;font-size:16px;font-weight:300;line-height:1.5;color:#b9b9b9}.footer__copywrite--text:last-child{font-size:15px}.footer__copywrite--text a{text-decoration:none;font-weight:700;color:#ff2b58}.footer__copywrite--logo{font-family:Pacifico,cursive;font-size:25px;font-weight:400;color:#b9b9b9}@media only screen and (max-width:415px){.footer__text{text-align:center}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
